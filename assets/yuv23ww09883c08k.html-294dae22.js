const e=JSON.parse('{"key":"v-50301bcf","path":"/docs/yuv23ww09883c08k.html","title":"为什么少用 ref 和 useRef 呢？","lang":"zh-CN","frontmatter":{"title":"为什么少用 ref 和 useRef 呢？","urlname":"yuv23ww09883c08k","updated":"2023-09-07 10:16:09","description":"useRef 是 react 中的一个 hooks，用于管理函数组件中引用状态，防止组件刷新后重新创建引用对象。 useRef 方法 返回一个 useRef 对象，包含 current 属性，默认值是 null，存储在 current 属性的数据。发生值改变时不会触发组件渲染。 使用场景 使用 useRef 可以在以下场景下发挥作用： 获取 DOM 元素的引用：useRef 可以用来获取渲染后的 DOM 元素的引用，类似于类组件中的 ref 属性的作用。 保存组件的内部状态：由于 useRef 返回的引用在组件重新渲染时保持不变，我们可以使用 useRef 来存储和访问组件的内部状态，而不触发组件的重新渲染。 与其他 React 特性交互：useRef 可以与其他 React 特性（如动画库、焦点管理库等）进行交互，以便操作 DOM 或组件的状态。","head":[["meta",{"property":"og:url","content":"http://www.itwangtian.com/docs/yuv23ww09883c08k.html"}],["meta",{"property":"og:site_name","content":"王天的web进阶之路"}],["meta",{"property":"og:title","content":"为什么少用 ref 和 useRef 呢？"}],["meta",{"property":"og:description","content":"useRef 是 react 中的一个 hooks，用于管理函数组件中引用状态，防止组件刷新后重新创建引用对象。 useRef 方法 返回一个 useRef 对象，包含 current 属性，默认值是 null，存储在 current 属性的数据。发生值改变时不会触发组件渲染。 使用场景 使用 useRef 可以在以下场景下发挥作用： 获取 DOM 元素的引用：useRef 可以用来获取渲染后的 DOM 元素的引用，类似于类组件中的 ref 属性的作用。 保存组件的内部状态：由于 useRef 返回的引用在组件重新渲染时保持不变，我们可以使用 useRef 来存储和访问组件的内部状态，而不触发组件的重新渲染。 与其他 React 特性交互：useRef 可以与其他 React 特性（如动画库、焦点管理库等）进行交互，以便操作 DOM 或组件的状态。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T13:53:52.000Z"}],["meta",{"property":"article:author","content":"程序员王天"}],["meta",{"property":"article:modified_time","content":"2023-09-30T13:53:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为什么少用 ref 和 useRef 呢？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-30T13:53:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员王天\\",\\"url\\":\\"http://www.itwangtian.com\\"}]}"]]},"headers":[],"git":{"createdTime":1696082032000,"updatedTime":1696082032000,"contributors":[{"name":"1970652600@qq.com~","email":"1970652600@qq.com","commits":1}]},"readingTime":{"minutes":2.32,"words":695},"filePathRelative":"docs/yuv23ww09883c08k.md","localizedDate":"2023年9月30日","excerpt":"<p>useRef 是 react 中的一个 hooks，用于管理函数组件中引用状态，防止组件刷新后重新创建引用对象。<br>\\nuseRef 方法 返回一个 useRef 对象，包含 current 属性，默认值是 null，存储在 current 属性的数据。发生值改变时不会触发组件渲染。</p>\\n<h1> 使用场景</h1>\\n<p>使用 useRef 可以在以下场景下发挥作用：</p>\\n<ol>\\n<li>获取 DOM 元素的引用：useRef 可以用来获取渲染后的 DOM 元素的引用，类似于类组件中的 ref 属性的作用。</li>\\n<li>保存组件的内部状态：由于 useRef 返回的引用在组件重新渲染时保持不变，我们可以使用 useRef 来存储和访问组件的内部状态，而不触发组件的重新渲染。</li>\\n<li>与其他 React 特性交互：useRef 可以与其他 React 特性（如动画库、焦点管理库等）进行交互，以便操作 DOM 或组件的状态。</li>\\n</ol>","autoDesc":true}');export{e as data};
