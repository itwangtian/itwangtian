const t=JSON.parse('{"key":"v-72eabbaa","path":"/docs/dv8t85khggaglosv.html","title":"immer：优雅操作react数据状态，告别繁琐克隆拷贝","lang":"zh-CN","frontmatter":{"title":"immer：优雅操作react数据状态，告别繁琐克隆拷贝","urlname":"dv8t85khggaglosv","updated":"2023-08-23 22:39:51","description":"文章首发公众号 👉程序员王天👈 欢迎关注 前言 Immer 是一个用于简化 JavaScript 状态管理的库，以更方便地更新和操作不可变数据 可以解决以下问题： 不可变状态更新：React 推崇使用不可变（Immutable）的数据来管理组件的状态。 :::tips 【Immutable 不可变对象】 不直接修改状态或属性对象，而是创建新的对象来代表改变后的状态。 :::","head":[["meta",{"property":"og:url","content":"http://www.itwangtian.com/docs/dv8t85khggaglosv.html"}],["meta",{"property":"og:site_name","content":"王天的web进阶之路"}],["meta",{"property":"og:title","content":"immer：优雅操作react数据状态，告别繁琐克隆拷贝"}],["meta",{"property":"og:description","content":"文章首发公众号 👉程序员王天👈 欢迎关注 前言 Immer 是一个用于简化 JavaScript 状态管理的库，以更方便地更新和操作不可变数据 可以解决以下问题： 不可变状态更新：React 推崇使用不可变（Immutable）的数据来管理组件的状态。 :::tips 【Immutable 不可变对象】 不直接修改状态或属性对象，而是创建新的对象来代表改变后的状态。 :::"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T13:53:52.000Z"}],["meta",{"property":"article:author","content":"程序员王天"}],["meta",{"property":"article:modified_time","content":"2023-09-30T13:53:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"immer：优雅操作react数据状态，告别繁琐克隆拷贝\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-30T13:53:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员王天\\",\\"url\\":\\"http://www.itwangtian.com\\"}]}"]]},"headers":[],"git":{"createdTime":1696082032000,"updatedTime":1696082032000,"contributors":[{"name":"1970652600@qq.com~","email":"1970652600@qq.com","commits":1}]},"readingTime":{"minutes":2.51,"words":752},"filePathRelative":"docs/dv8t85khggaglosv.md","localizedDate":"2023年9月30日","excerpt":"<p>文章首发公众号 👉<a href=\\"https://img-cdn.dslcv.com/wt_gzh.png\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">程序员王天</a>👈 欢迎关注</p>\\n<h1> 前言</h1>\\n<p>Immer 是一个用于简化 JavaScript 状态管理的库，以更方便地更新和操作不可变数据</p>\\n<p>可以解决以下问题：</p>\\n<ol>\\n<li><code>不可变状态更新</code>：React 推崇使用不可变（Immutable）的数据来管理组件的状态。<br>\\n:::tips<br>\\n【Immutable 不可变对象】<br>\\n不直接修改状态或属性对象，而是创建新的对象来代表改变后的状态。<br>\\n:::</li>\\n</ol>","autoDesc":true}');export{t as data};
