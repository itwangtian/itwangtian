import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c as e,a as n,b as s,d as c,e as l}from"./app-4ec51699.js";const i={},r=n("h1",{id:"hooks-版本",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hooks-版本","aria-hidden":"true"},"#"),s(" hooks 版本")],-1),u={href:"https://www.yuque.com/itwangtian/ycsiao/slaatvufmrio04vo?view=doc_embed&inner=E9R9I",target:"_blank",rel:"noopener noreferrer"},k=l(`<h1 id="组件版本" tabindex="-1"><a class="header-anchor" href="#组件版本" aria-hidden="true">#</a> 组件版本</h1><ul><li>history 监听路由变化，更新路由前进行权限校验</li><li>使用内置 hooks <code>useLocation</code>来获取路径信息</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 路由鉴权组件 -</span>
<span class="token comment">// 作用1：登录鉴权</span>
<span class="token comment">// 作用2：实现路由重定向</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Type <span class="token keyword">from</span> <span class="token string">&quot;../../../utils/type&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NavLink<span class="token punctuation">,</span> Navigate<span class="token punctuation">,</span> useLocation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-router-dom&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> RouterConfig <span class="token keyword">from</span> <span class="token string">&quot;../../../router/routerConfig&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 路由配置数据</span>

<span class="token comment">// 查找当前路径的路由数据</span>
<span class="token keyword">const</span> <span class="token function-variable function">searchRoute</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">path</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">routes</span><span class="token operator">:</span> Type<span class="token punctuation">.</span>RoterList</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> reslut <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> iterator <span class="token keyword">of</span> routes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span>path <span class="token operator">===</span> path <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>iterator<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token keyword">return</span> iterator<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">searchRoute</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> iterator<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
      reslut <span class="token operator">=</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> reslut<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">AuthRoute</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">props</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 实现路由重定向，判断下当前路由配置是否包含 属性to</span>

  <span class="token comment">// 获取当前路由的配置数据</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> pathname <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;useLocation()&#39;</span><span class="token punctuation">,</span> <span class="token function">useLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> routeData <span class="token operator">=</span> <span class="token function">searchRoute</span><span class="token punctuation">(</span>pathname<span class="token punctuation">,</span> RouterConfig<span class="token punctuation">)</span> <span class="token keyword">as</span> any
  <span class="token comment">//   鉴权代码 --判断用户token、缓存信息,没有token跳转登录页，登录页无需校验token</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> pathname <span class="token operator">!==</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;/login&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 重定向</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>routeData<span class="token punctuation">.</span>to<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 跳转重定向页面</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Navigate to<span class="token operator">=</span><span class="token punctuation">{</span>routeData<span class="token punctuation">.</span>to<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Navigate<span class="token operator">&gt;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> AuthRoute<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 authRoute 路由守卫组件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// import RouteDom from &quot;./router/routerView&quot;;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserRouter<span class="token punctuation">,</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-router-dom&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 引入路由组件</span>
<span class="token keyword">import</span> RouteApp <span class="token keyword">from</span> <span class="token string">&quot;./router/routerView&quot;</span><span class="token punctuation">;</span> 、
<span class="token comment">// 引入路由守卫组件</span>
<span class="token keyword">import</span> AuthRoute <span class="token keyword">from</span> <span class="token string">&quot;./components/common/authRoute&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> root <span class="token operator">=</span> ReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement
<span class="token punctuation">)</span><span class="token punctuation">;</span>
root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Provider store<span class="token operator">=</span><span class="token punctuation">{</span>Stroe<span class="token punctuation">}</span><span class="token operator">&gt;</span>
  	  <span class="token operator">&lt;</span>BrowserRouter<span class="token operator">&gt;</span>
        	<span class="token operator">&lt;</span>AuthRoute<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>RouteApp<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>RouteApp<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>AuthRoute<span class="token operator">&gt;</span>
  	  <span class="token operator">&lt;</span><span class="token operator">/</span>BrowserRouter<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function d(v,m){const a=o("ExternalLinkIcon");return p(),e("div",null,[r,n("p",null,[n("a",u,[s("react hooks 全攻略"),c(a)])]),k])}const y=t(i,[["render",d],["__file","lw9yfokviowgggeg.html.vue"]]);export{y as default};
