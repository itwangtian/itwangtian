import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as r}from"./app-1bdccc93.js";const d={},h=r('<h1 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h1><ul><li>react+t、redux、antd、react-router、socket</li></ul><h1 id="后端" tabindex="-1"><a class="header-anchor" href="#后端" aria-hidden="true">#</a> 后端</h1><ul><li>koa、alioss、alipay、soketIo</li></ul><h1 id="核心模块" tabindex="-1"><a class="header-anchor" href="#核心模块" aria-hidden="true">#</a> 核心模块</h1><figure><img src="https://gyg-bawei-zg4-2103b.oss-cn-beijing.aliyuncs.com/def3051da41b1106aaa6bad7b85ca98b.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="项目适配-eslint" tabindex="-1"><a class="header-anchor" href="#项目适配-eslint" aria-hidden="true">#</a> 项目适配 eslint</h2><h3 id="技术项" tabindex="-1"><a class="header-anchor" href="#技术项" aria-hidden="true">#</a> <strong>技术项</strong></h3><ul><li>eslint+prettier+husky+commitizen</li></ul><h3 id="提薪点" tabindex="-1"><a class="header-anchor" href="#提薪点" aria-hidden="true">#</a> <strong>提薪点</strong></h3><ol><li>项目规范-eslint+prettier+husky+commitizen</li><li>配置使用提高项目代码的准确性、安全性和健壮性</li><li>编写项目中公共方法库的 <code>d.ts</code>文件和处理项目中没有声明文件的第三方库【提薪】</li></ol><h3 id="源码说明" tabindex="-1"><a class="header-anchor" href="#源码说明" aria-hidden="true">#</a> 源码说明</h3><ol><li>已对整个项目进行环境配置  eslint+prettier+husky+commitizen</li><li>项目根目录中，已配置 eslint +prettier 定义 语法风格规范</li><li>公共库<code>/src/utils/tool.d.ts</code> 配置全局类型声明</li></ol><h2 id="rbac-权限管理" tabindex="-1"><a class="header-anchor" href="#rbac-权限管理" aria-hidden="true">#</a> rbac 权限管理</h2><h3 id="技术项-1" tabindex="-1"><a class="header-anchor" href="#技术项-1" aria-hidden="true">#</a> 技术项</h3><ol><li>react-router、koa</li></ol><h3 id="提薪点-1" tabindex="-1"><a class="header-anchor" href="#提薪点-1" aria-hidden="true">#</a> 提薪点</h3><ol><li>封装公共 hooks</li><li>token 鉴权</li></ol><h3 id="源码说明-1" tabindex="-1"><a class="header-anchor" href="#源码说明-1" aria-hidden="true">#</a> 源码说明</h3><ol><li>在项目<code>\\src\\hooks\\</code>封装公共 hooks</li><li>在项目-前端<code>\\src\\utils\\Request.ts</code>请求拦截</li><li>后端封装<code>verifyToken</code>校验中间件-可配置指定接口校验 token</li></ol><h2 id="云文件-oss" tabindex="-1"><a class="header-anchor" href="#云文件-oss" aria-hidden="true">#</a> 云文件 oss</h2><p>阿里云 oos、file 上传 、sokectio、分片上传、断点续传、koa</p><h3 id="提薪点-2" tabindex="-1"><a class="header-anchor" href="#提薪点-2" aria-hidden="true">#</a> 提薪点</h3><ul><li>服务端断点续传</li><li>socket 心跳检测</li></ul><h3 id="源码说明-2" tabindex="-1"><a class="header-anchor" href="#源码说明-2" aria-hidden="true">#</a> 源码说明</h3><p><code>server</code></p><ul><li>阿里云 oss 进行服务端上传、判断文件大小、过大切片处理</li><li>进度实时回显-使用<code>socketio</code></li><li>文件上传、暂停、使用 koa+sokect+alioss 进行对 oss 切片操作</li><li>sokcet 心跳检测-可使用 sokcetIO 进行配置、或者手写定时器查询 socket 状态</li></ul><h2 id="充值支付" tabindex="-1"><a class="header-anchor" href="#充值支付" aria-hidden="true">#</a> 充值支付</h2><p>支付宝 sdk、koa</p><h3 id="微信下单流程" tabindex="-1"><a class="header-anchor" href="#微信下单流程" aria-hidden="true">#</a> 微信下单流程</h3><figure><img src="https://gyg-bawei-zg4-2103b.oss-cn-beijing.aliyuncs.com/52fe8ddc25303ffa9fd828c4944c4aa4.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="用户表格" tabindex="-1"><a class="header-anchor" href="#用户表格" aria-hidden="true">#</a> 用户表格</h2><p>redux、koa、mock</p><h3 id="提薪点-3" tabindex="-1"><a class="header-anchor" href="#提薪点-3" aria-hidden="true">#</a> 提薪点</h3><ul><li>搭建项目公共组件库【提薪】</li></ul><h3 id="源码说明-3" tabindex="-1"><a class="header-anchor" href="#源码说明-3" aria-hidden="true">#</a> 源码说明</h3><ul><li>前端<code>src\\components\\my_componet</code>封装表格、分页、弹框相关公共组件</li></ul>',37),o=[h];function l(t,s){return a(),i("div",null,o)}const u=e(d,[["render",l],["__file","gbwx6y5p60i7wv4g.html.vue"]]);export{u as default};
