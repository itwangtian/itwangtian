const n=JSON.parse('{"key":"v-21a36f0b","path":"/docs/cg2svaaug21hrh90.html","title":"react-router-鉴权页面闪现","lang":"zh-CN","frontmatter":{"title":"react-router-鉴权页面闪现","urlname":"cg2svaaug21hrh90","updated":"2023-08-18 09:31:58","description":"问题 在用户未登录时、打开某个需要鉴权的页面，会出现短暂的目标页面闪现，然后跳转到登录页。 这是因为在页面加载时，会先展示目标页面的内容，然后在进行鉴权检查后才进行跳转的过程导致的。 解决 使用鉴权路由组件：创建一个高阶组件或自定义组件，用于对需要鉴权的路由进行包裹。在该组件中进行鉴权检查，如果用户未登录，则直接跳转到登录页，否则渲染目标页面。这样可以避免目标页面的内容闪现 示例代码 封装一个路由守卫高阶组件 import { Navigate, useLocation } from \\"react-router-dom\\"; import { serachRoutr } from \\"../utils/utils\\"; import { ListRoute } from \\"../router/routerConfig\\"; const AuthRouer = (PROPS: any) =&gt; { const isLogin = localStorage.getItem(\\"isLogin\\"); // const navigate = useNavigate(); const { pathname } = useLocation(); const res = serachRoutr(pathname, ListRoute) as any; // 完成二级路由重定向 if (res.meta &amp;&amp; res.meta.to) { return &lt;Navigate to=\\"/home/main\\" replace&gt;&lt;/Navigate&gt;; } if (!isLogin &amp;&amp; pathname !== \\"/login\\") { console.log(\\"loaclhost\\", pathname); // 未登录且不是登录页，跳转到登录页 return &lt;Navigate to=\\"/login\\" replace /&gt;; } else { return &lt;div&gt;{PROPS.children}&lt;/div&gt;; } }; export default AuthRouer;","head":[["meta",{"property":"og:url","content":"http://www.itwangtian.com/docs/cg2svaaug21hrh90.html"}],["meta",{"property":"og:site_name","content":"王天的web进阶之路"}],["meta",{"property":"og:title","content":"react-router-鉴权页面闪现"}],["meta",{"property":"og:description","content":"问题 在用户未登录时、打开某个需要鉴权的页面，会出现短暂的目标页面闪现，然后跳转到登录页。 这是因为在页面加载时，会先展示目标页面的内容，然后在进行鉴权检查后才进行跳转的过程导致的。 解决 使用鉴权路由组件：创建一个高阶组件或自定义组件，用于对需要鉴权的路由进行包裹。在该组件中进行鉴权检查，如果用户未登录，则直接跳转到登录页，否则渲染目标页面。这样可以避免目标页面的内容闪现 示例代码 封装一个路由守卫高阶组件 import { Navigate, useLocation } from \\"react-router-dom\\"; import { serachRoutr } from \\"../utils/utils\\"; import { ListRoute } from \\"../router/routerConfig\\"; const AuthRouer = (PROPS: any) =&gt; { const isLogin = localStorage.getItem(\\"isLogin\\"); // const navigate = useNavigate(); const { pathname } = useLocation(); const res = serachRoutr(pathname, ListRoute) as any; // 完成二级路由重定向 if (res.meta &amp;&amp; res.meta.to) { return &lt;Navigate to=\\"/home/main\\" replace&gt;&lt;/Navigate&gt;; } if (!isLogin &amp;&amp; pathname !== \\"/login\\") { console.log(\\"loaclhost\\", pathname); // 未登录且不是登录页，跳转到登录页 return &lt;Navigate to=\\"/login\\" replace /&gt;; } else { return &lt;div&gt;{PROPS.children}&lt;/div&gt;; } }; export default AuthRouer;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T13:53:52.000Z"}],["meta",{"property":"article:author","content":"程序员王天"}],["meta",{"property":"article:modified_time","content":"2023-09-30T13:53:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"react-router-鉴权页面闪现\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-30T13:53:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员王天\\",\\"url\\":\\"http://www.itwangtian.com\\"}]}"]]},"headers":[{"level":2,"title":"封装一个路由守卫高阶组件","slug":"封装一个路由守卫高阶组件","link":"#封装一个路由守卫高阶组件","children":[]}],"git":{"createdTime":1696082032000,"updatedTime":1696082032000,"contributors":[{"name":"1970652600@qq.com~","email":"1970652600@qq.com","commits":1}]},"readingTime":{"minutes":1.3,"words":390},"filePathRelative":"docs/cg2svaaug21hrh90.md","localizedDate":"2023年9月30日","excerpt":"<h1> 问题</h1>\\n<p>在用户未登录时、打开某个需要鉴权的页面，会出现短暂的目标页面闪现，然后跳转到登录页。<br>\\n这是因为在页面加载时，会先展示目标页面的内容，然后在进行鉴权检查后才进行跳转的过程导致的。</p>\\n<h1> 解决</h1>\\n<ol>\\n<li>使用鉴权路由组件：创建一个高阶组件或自定义组件，用于对需要鉴权的路由进行包裹。在该组件中进行鉴权检查，如果用户未登录，则直接跳转到登录页，否则渲染目标页面。这样可以避免目标页面的内容闪现</li>\\n</ol>\\n<h1> 示例代码</h1>\\n<h2> 封装一个路由守卫高阶组件</h2>\\n<div class=\\"language-tsx line-numbers-mode\\" data-ext=\\"tsx\\"><pre class=\\"language-tsx\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> Navigate<span class=\\"token punctuation\\">,</span> useLocation <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"react-router-dom\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> serachRoutr <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"../utils/utils\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> ListRoute <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"../router/routerConfig\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">AuthRouer</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">PROPS</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> isLogin <span class=\\"token operator\\">=</span> localStorage<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getItem</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"isLogin\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// const navigate = useNavigate();</span>\\n\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> pathname <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">useLocation</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> res <span class=\\"token operator\\">=</span> <span class=\\"token function\\">serachRoutr</span><span class=\\"token punctuation\\">(</span>pathname<span class=\\"token punctuation\\">,</span> ListRoute<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 完成二级路由重定向</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">.</span>meta <span class=\\"token operator\\">&amp;&amp;</span> res<span class=\\"token punctuation\\">.</span>meta<span class=\\"token punctuation\\">.</span>to<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Navigate</span></span> <span class=\\"token attr-name\\">to</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>/home/main<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">replace</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span><span class=\\"token class-name\\">Navigate</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>isLogin <span class=\\"token operator\\">&amp;&amp;</span> pathname <span class=\\"token operator\\">!==</span> <span class=\\"token string\\">\\"/login\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"loaclhost\\"</span><span class=\\"token punctuation\\">,</span> pathname<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 未登录且不是登录页，跳转到登录页</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Navigate</span></span> <span class=\\"token attr-name\\">to</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>/login<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">replace</span> <span class=\\"token punctuation\\">/&gt;</span></span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">{</span><span class=\\"token constant\\">PROPS</span><span class=\\"token punctuation\\">.</span>children<span class=\\"token punctuation\\">}</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> AuthRouer<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
