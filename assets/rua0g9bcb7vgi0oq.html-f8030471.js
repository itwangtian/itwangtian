const n=JSON.parse('{"key":"v-a7b1026c","path":"/docs/rua0g9bcb7vgi0oq.html","title":"ts函数可选参数-未使用—ESlint 校验","lang":"zh-CN","frontmatter":{"title":"ts函数可选参数-未使用—ESlint 校验","urlname":"rua0g9bcb7vgi0oq","date":"2023-07-21 10:20:15","updated":"2023-07-21 10:21:08","description":"如果你在 TypeScript 函数中使用了可选参数，但是 ESLint 报错了，你可以通过以下方法进行解决： 在函数定义的地方添加一个注释 // eslint-disable-next-line @typescript-eslint/no-unused-vars 来忽略该行的错误提示。这会告诉 ESLint 忽略当前行的未使用变量的警告。 function myFunction(param1: string, param2?: number) { // eslint-disable-next-line @typescript-eslint/no-unused-vars // 使用了可选参数 `param2`，但是未在代码中使用 console.log(param1); }","head":[["meta",{"property":"og:url","content":"http://www.itwangtian.com/docs/rua0g9bcb7vgi0oq.html"}],["meta",{"property":"og:site_name","content":"王天的web进阶之路"}],["meta",{"property":"og:title","content":"ts函数可选参数-未使用—ESlint 校验"}],["meta",{"property":"og:description","content":"如果你在 TypeScript 函数中使用了可选参数，但是 ESLint 报错了，你可以通过以下方法进行解决： 在函数定义的地方添加一个注释 // eslint-disable-next-line @typescript-eslint/no-unused-vars 来忽略该行的错误提示。这会告诉 ESLint 忽略当前行的未使用变量的警告。 function myFunction(param1: string, param2?: number) { // eslint-disable-next-line @typescript-eslint/no-unused-vars // 使用了可选参数 `param2`，但是未在代码中使用 console.log(param1); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T13:53:52.000Z"}],["meta",{"property":"article:author","content":"程序员王天"}],["meta",{"property":"article:published_time","content":"2023-07-21T10:20:15.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-30T13:53:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ts函数可选参数-未使用—ESlint 校验\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-21T10:20:15.000Z\\",\\"dateModified\\":\\"2023-09-30T13:53:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员王天\\",\\"url\\":\\"http://www.itwangtian.com\\"}]}"]]},"headers":[],"git":{"createdTime":1696082032000,"updatedTime":1696082032000,"contributors":[{"name":"1970652600@qq.com~","email":"1970652600@qq.com","commits":1}]},"readingTime":{"minutes":1.06,"words":317},"filePathRelative":"docs/rua0g9bcb7vgi0oq.md","localizedDate":"2023年7月21日","excerpt":"<p>如果你在 TypeScript 函数中使用了可选参数，但是 ESLint 报错了，你可以通过以下方法进行解决：</p>\\n<ol>\\n<li>在函数定义的地方添加一个注释 <code>// eslint-disable-next-line @typescript-eslint/no-unused-vars</code> 来忽略该行的错误提示。这会告诉 ESLint 忽略当前行的未使用变量的警告。</li>\\n</ol>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">myFunction</span><span class=\\"token punctuation\\">(</span>param1<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> param2<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span>\\n  <span class=\\"token comment\\">// 使用了可选参数 `param2`，但是未在代码中使用</span>\\n  <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>param1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
