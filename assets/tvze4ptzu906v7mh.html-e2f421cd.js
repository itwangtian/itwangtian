const t=JSON.parse('{"key":"v-b4a8aaae","path":"/docs/tvze4ptzu906v7mh.html","title":"react状态改变，为何触发函数组件重新渲染？","lang":"zh-CN","frontmatter":{"title":"react状态改变，为何触发函数组件重新渲染？","urlname":"tvze4ptzu906v7mh","date":"2023-08-31 22:58:26","updated":"2023-09-09 17:01:03","description":"一句话总结： 要更新视图呀，保组件以最新的状态更新。 重新渲染步骤： 重新计算组件的虚拟 DOM 树 当状态发生变化时，React 会重新计算组件的虚拟 DOM 树。这个过程是高效的，因为 React 使用了一些算法和优化技术，例如虚拟 DOM 的 diff 算法，来尽可能减少计算量。 对比新旧虚拟 DOM 树的差异 React 会对比新旧两棵虚拟 DOM 树，并找出其中的差异。这个过程称为协调（reconciliation）。React 会查找需要添加、更新或移除的 DOM 节点，并生成一组操作指令，以最小的代价来实现新旧状态之间的变化。","head":[["meta",{"property":"og:url","content":"http://www.itwangtian.com/docs/tvze4ptzu906v7mh.html"}],["meta",{"property":"og:site_name","content":"王天的web进阶之路"}],["meta",{"property":"og:title","content":"react状态改变，为何触发函数组件重新渲染？"}],["meta",{"property":"og:description","content":"一句话总结： 要更新视图呀，保组件以最新的状态更新。 重新渲染步骤： 重新计算组件的虚拟 DOM 树 当状态发生变化时，React 会重新计算组件的虚拟 DOM 树。这个过程是高效的，因为 React 使用了一些算法和优化技术，例如虚拟 DOM 的 diff 算法，来尽可能减少计算量。 对比新旧虚拟 DOM 树的差异 React 会对比新旧两棵虚拟 DOM 树，并找出其中的差异。这个过程称为协调（reconciliation）。React 会查找需要添加、更新或移除的 DOM 节点，并生成一组操作指令，以最小的代价来实现新旧状态之间的变化。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T13:53:52.000Z"}],["meta",{"property":"article:author","content":"程序员王天"}],["meta",{"property":"article:published_time","content":"2023-08-31T22:58:26.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-30T13:53:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"react状态改变，为何触发函数组件重新渲染？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-31T22:58:26.000Z\\",\\"dateModified\\":\\"2023-09-30T13:53:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员王天\\",\\"url\\":\\"http://www.itwangtian.com\\"}]}"]]},"headers":[{"level":2,"title":"重新计算组件的虚拟 DOM 树","slug":"重新计算组件的虚拟-dom-树","link":"#重新计算组件的虚拟-dom-树","children":[]},{"level":2,"title":"对比新旧虚拟 DOM 树的差异","slug":"对比新旧虚拟-dom-树的差异","link":"#对比新旧虚拟-dom-树的差异","children":[]},{"level":2,"title":"应用差异到 DOM 上","slug":"应用差异到-dom-上","link":"#应用差异到-dom-上","children":[]}],"git":{"createdTime":1696082032000,"updatedTime":1696082032000,"contributors":[{"name":"1970652600@qq.com~","email":"1970652600@qq.com","commits":1}]},"readingTime":{"minutes":1.13,"words":338},"filePathRelative":"docs/tvze4ptzu906v7mh.md","localizedDate":"2023年8月31日","excerpt":"<h1> 一句话总结：</h1>\\n<p>要更新视图呀，保组件以最新的状态更新。</p>\\n<h1> 重新渲染步骤：</h1>\\n<h2> 重新计算组件的虚拟 DOM 树</h2>\\n<p>当状态发生变化时，React 会重新计算组件的虚拟 DOM 树。这个过程是高效的，因为 React 使用了一些算法和优化技术，例如虚拟 DOM 的 diff 算法，来尽可能减少计算量。</p>\\n<h2> 对比新旧虚拟 DOM 树的差异</h2>\\n<p>React 会对比新旧两棵虚拟 DOM 树，并找出其中的差异。这个过程称为协调（reconciliation）。React 会查找需要添加、更新或移除的 DOM 节点，并生成一组操作指令，以最小的代价来实现新旧状态之间的变化。</p>","autoDesc":true}');export{t as data};
