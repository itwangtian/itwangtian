const n=JSON.parse('{"key":"v-67c38ba3","path":"/docs/ty0lc4810uno20lx.html","title":"socket心跳检测","lang":"zh-CN","frontmatter":{"title":"socket心跳检测","urlname":"ty0lc4810uno20lx","date":"2023-08-27 00:21:04","updated":"2023-08-27 00:23:15","description":"以下是一个简单的示例代码，用于在前后端之间进行基本的心跳检测。 前端代码（使用 JavaScript）： // 创建WebSocket连接 const socket = new WebSocket(\\"ws://localhost:8000\\"); // 定时发送心跳消息 setInterval(() =&gt; { if (socket.readyState === WebSocket.OPEN) { socket.send(\\"heartbeat\\"); } }, 5000); // 监听服务器发送的消息 socket.onmessage = function (event) { // 处理服务器返回的消息 console.log(\\"Received message from server:\\", event.data); }; // 检测WebSocket连接状态 socket.onclose = function () { console.log(\\"Socket connection closed\\"); }; socket.onerror = function (error) { console.error(\\"Socket error:\\", error); };","head":[["meta",{"property":"og:url","content":"http://www.itwangtian.com/docs/ty0lc4810uno20lx.html"}],["meta",{"property":"og:site_name","content":"王天的web进阶之路"}],["meta",{"property":"og:title","content":"socket心跳检测"}],["meta",{"property":"og:description","content":"以下是一个简单的示例代码，用于在前后端之间进行基本的心跳检测。 前端代码（使用 JavaScript）： // 创建WebSocket连接 const socket = new WebSocket(\\"ws://localhost:8000\\"); // 定时发送心跳消息 setInterval(() =&gt; { if (socket.readyState === WebSocket.OPEN) { socket.send(\\"heartbeat\\"); } }, 5000); // 监听服务器发送的消息 socket.onmessage = function (event) { // 处理服务器返回的消息 console.log(\\"Received message from server:\\", event.data); }; // 检测WebSocket连接状态 socket.onclose = function () { console.log(\\"Socket connection closed\\"); }; socket.onerror = function (error) { console.error(\\"Socket error:\\", error); };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T13:53:52.000Z"}],["meta",{"property":"article:author","content":"程序员王天"}],["meta",{"property":"article:published_time","content":"2023-08-27T00:21:04.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-30T13:53:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"socket心跳检测\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-27T00:21:04.000Z\\",\\"dateModified\\":\\"2023-09-30T13:53:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员王天\\",\\"url\\":\\"http://www.itwangtian.com\\"}]}"]]},"headers":[],"git":{"createdTime":1696082032000,"updatedTime":1696082032000,"contributors":[{"name":"1970652600@qq.com~","email":"1970652600@qq.com","commits":1}]},"readingTime":{"minutes":1.21,"words":364},"filePathRelative":"docs/ty0lc4810uno20lx.md","localizedDate":"2023年8月27日","excerpt":"<p>以下是一个简单的示例代码，用于在前后端之间进行基本的心跳检测。<br>\\n前端代码（使用 JavaScript）：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 创建WebSocket连接</span>\\n<span class=\\"token keyword\\">const</span> socket <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">WebSocket</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ws://localhost:8000\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 定时发送心跳消息</span>\\n<span class=\\"token function\\">setInterval</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>socket<span class=\\"token punctuation\\">.</span>readyState <span class=\\"token operator\\">===</span> WebSocket<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">OPEN</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    socket<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">send</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"heartbeat\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5000</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 监听服务器发送的消息</span>\\nsocket<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onmessage</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">event</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 处理服务器返回的消息</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Received message from server:\\"</span><span class=\\"token punctuation\\">,</span> event<span class=\\"token punctuation\\">.</span>data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 检测WebSocket连接状态</span>\\nsocket<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onclose</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Socket connection closed\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\nsocket<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onerror</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">error</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Socket error:\\"</span><span class=\\"token punctuation\\">,</span> error<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
