const t=JSON.parse('{"key":"v-24d24fa3","path":"/docs/nhv8wotm3138tar0.html","title":"终于搞懂虚拟Dom啦！","lang":"zh-CN","frontmatter":{"title":"终于搞懂虚拟Dom啦！","urlname":"nhv8wotm3138tar0","date":"2023-08-03 16:02:50","updated":"2023-09-09 17:14:10","description":"以一种对象结构的方式描述页面。通过比对虚拟 dom 的数据结构差异，来更新实际 dom，避免了传统 dom 中的重绘问题。 1. 原生 DOM 所带来的问题 使用原生 DOM 进行操作时，每次更新界面都需要重新计算整个 DOM 树的结构和样式，然后进行重新渲染，这样的操作会带来性能上的开销。 举一个例子，假设我们需要向一个列表中添加 1000 个列表项。如果使用原生 DOM 进行操作，每次添加列表项都需直接对实际 DOM 进行插入操作，这样做会导致页面渲染变慢，用户体验下降。 2. 虚拟 DOM 是什么 虚拟 DOM 是一个轻量级的 JavaScript 对象，它是对真实 DOM 的一种抽象表示。React 通过使用虚拟 DOM 来跟踪和记录对真实 DOM 的修改，然后批量高效地更新真实 DOM。","head":[["meta",{"property":"og:url","content":"http://www.itwangtian.com/docs/nhv8wotm3138tar0.html"}],["meta",{"property":"og:site_name","content":"王天的web进阶之路"}],["meta",{"property":"og:title","content":"终于搞懂虚拟Dom啦！"}],["meta",{"property":"og:description","content":"以一种对象结构的方式描述页面。通过比对虚拟 dom 的数据结构差异，来更新实际 dom，避免了传统 dom 中的重绘问题。 1. 原生 DOM 所带来的问题 使用原生 DOM 进行操作时，每次更新界面都需要重新计算整个 DOM 树的结构和样式，然后进行重新渲染，这样的操作会带来性能上的开销。 举一个例子，假设我们需要向一个列表中添加 1000 个列表项。如果使用原生 DOM 进行操作，每次添加列表项都需直接对实际 DOM 进行插入操作，这样做会导致页面渲染变慢，用户体验下降。 2. 虚拟 DOM 是什么 虚拟 DOM 是一个轻量级的 JavaScript 对象，它是对真实 DOM 的一种抽象表示。React 通过使用虚拟 DOM 来跟踪和记录对真实 DOM 的修改，然后批量高效地更新真实 DOM。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T13:53:52.000Z"}],["meta",{"property":"article:author","content":"程序员王天"}],["meta",{"property":"article:published_time","content":"2023-08-03T16:02:50.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-30T13:53:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"终于搞懂虚拟Dom啦！\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-03T16:02:50.000Z\\",\\"dateModified\\":\\"2023-09-30T13:53:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员王天\\",\\"url\\":\\"http://www.itwangtian.com\\"}]}"]]},"headers":[{"level":2,"title":"虚拟 dom vs 真实 dom","slug":"虚拟-dom-vs-真实-dom","link":"#虚拟-dom-vs-真实-dom","children":[{"level":3,"title":"结构对比","slug":"结构对比","link":"#结构对比","children":[]},{"level":3,"title":"流程对比","slug":"流程对比","link":"#流程对比","children":[]}]},{"level":2,"title":"react 中组件名为什么大写？","slug":"react-中组件名为什么大写","link":"#react-中组件名为什么大写","children":[]}],"git":{"createdTime":1696082032000,"updatedTime":1696082032000,"contributors":[{"name":"1970652600@qq.com~","email":"1970652600@qq.com","commits":1}]},"readingTime":{"minutes":4.22,"words":1266},"filePathRelative":"docs/nhv8wotm3138tar0.md","localizedDate":"2023年8月3日","excerpt":"<p>以一种对象结构的方式描述页面。通过比对虚拟 dom 的数据结构差异，来更新实际 dom，避免了传统 dom 中的重绘问题。</p>\\n<h1> 1. 原生 DOM 所带来的问题</h1>\\n<p>使用原生 DOM 进行操作时，每次更新界面都需要重新计算整个 DOM 树的结构和样式，然后进行重新渲染，这样的操作会带来性能上的开销。</p>\\n<p>举一个例子，假设我们需要向一个列表中添加 1000 个列表项。如果使用原生 DOM 进行操作，每次添加列表项都需直接对实际 DOM 进行插入操作，这样做会导致页面渲染变慢，用户体验下降。</p>\\n<h1> 2. 虚拟 DOM 是什么</h1>\\n<p>虚拟 DOM 是一个轻量级的 JavaScript 对象，它是对真实 DOM 的一种抽象表示。React 通过使用虚拟 DOM 来跟踪和记录对真实 DOM 的修改，然后批量高效地更新真实 DOM。</p>","autoDesc":true}');export{t as data};
