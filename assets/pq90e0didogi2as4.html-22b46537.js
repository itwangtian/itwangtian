const t=JSON.parse('{"key":"v-6f39a8d9","path":"/docs/pq90e0didogi2as4.html","title":"更改redux 数据，页面未重新渲染","lang":"zh-CN","frontmatter":{"title":"更改redux 数据，页面未重新渲染","urlname":"pq90e0didogi2as4","date":"2023-08-24 20:00:47","updated":"2023-08-24 21:35:37","description":"场景 在 reducer 中使用 object.assign(state,{data:xxx}) 合并了状态，控制台打印 state 数据已更新，但是页面未重新渲染 原因 redux 会通过引用来判断前后两次 state 有没有变化。return 原来的 state 的话 redux 会认为你的 state 没有变化。 咱们用 Object.assign(state,xx)是直接修改了 state 对象，然后返回的还是原来的 state 对象（被修改过的数据）但是引用未更改，还是同一引用源。 解决","head":[["meta",{"property":"og:url","content":"http://www.itwangtian.com/docs/pq90e0didogi2as4.html"}],["meta",{"property":"og:site_name","content":"王天的web进阶之路"}],["meta",{"property":"og:title","content":"更改redux 数据，页面未重新渲染"}],["meta",{"property":"og:description","content":"场景 在 reducer 中使用 object.assign(state,{data:xxx}) 合并了状态，控制台打印 state 数据已更新，但是页面未重新渲染 原因 redux 会通过引用来判断前后两次 state 有没有变化。return 原来的 state 的话 redux 会认为你的 state 没有变化。 咱们用 Object.assign(state,xx)是直接修改了 state 对象，然后返回的还是原来的 state 对象（被修改过的数据）但是引用未更改，还是同一引用源。 解决"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T13:53:52.000Z"}],["meta",{"property":"article:author","content":"程序员王天"}],["meta",{"property":"article:published_time","content":"2023-08-24T20:00:47.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-30T13:53:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"更改redux 数据，页面未重新渲染\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-24T20:00:47.000Z\\",\\"dateModified\\":\\"2023-09-30T13:53:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员王天\\",\\"url\\":\\"http://www.itwangtian.com\\"}]}"]]},"headers":[],"git":{"createdTime":1696082032000,"updatedTime":1696082032000,"contributors":[{"name":"1970652600@qq.com~","email":"1970652600@qq.com","commits":1}]},"readingTime":{"minutes":0.76,"words":228},"filePathRelative":"docs/pq90e0didogi2as4.md","localizedDate":"2023年8月24日","excerpt":"<h1> 场景</h1>\\n<p>在 reducer 中使用 object.assign(state,{data:xxx}) 合并了状态，控制台打印 state 数据已更新，但是页面未重新渲染</p>\\n<h1> 原因</h1>\\n<p>redux 会通过引用来判断前后两次 state 有没有变化。return 原来的 state 的话 redux 会认为你的 state 没有变化。</p>\\n<p>咱们用 Object.assign(state,xx)是直接修改了 state 对象，然后返回的还是原来的 state 对象（被修改过的数据）但是引用未更改，还是同一引用源。</p>\\n<h1> 解决</h1>","autoDesc":true}');export{t as data};
