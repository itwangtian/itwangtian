const e=JSON.parse('{"key":"v-200ad308","path":"/docs/fbi9dqgqq17h84ag.html","title":"前端基建规范参考","lang":"zh-CN","frontmatter":{"title":"前端基建规范参考","urlname":"fbi9dqgqq17h84ag","date":"2023-07-21 11:18:35","updated":"2023-07-21 11:20:59","description":"一. 项目目录规范 文件目录组织现在常用的有两种方式，后面公司采用的第二种，更方便一些。两种方式没有最好的，只有更适合自己公司的，只要公司内部达成一致了，用哪一种都会很方便。 1.1 按功能类型来划分 按文件的功能类型来分，比如 api，组件，页面，路由，hooks，store，不管是全局使用到的，还是单独页面局部使用到的，都按照功能类型放在src下面对应的目录里面统一管理。","head":[["meta",{"property":"og:url","content":"http://www.itwangtian.com/docs/fbi9dqgqq17h84ag.html"}],["meta",{"property":"og:site_name","content":"王天的web进阶之路"}],["meta",{"property":"og:title","content":"前端基建规范参考"}],["meta",{"property":"og:description","content":"一. 项目目录规范 文件目录组织现在常用的有两种方式，后面公司采用的第二种，更方便一些。两种方式没有最好的，只有更适合自己公司的，只要公司内部达成一致了，用哪一种都会很方便。 1.1 按功能类型来划分 按文件的功能类型来分，比如 api，组件，页面，路由，hooks，store，不管是全局使用到的，还是单独页面局部使用到的，都按照功能类型放在src下面对应的目录里面统一管理。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T13:53:52.000Z"}],["meta",{"property":"article:author","content":"程序员王天"}],["meta",{"property":"article:published_time","content":"2023-07-21T11:18:35.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-30T13:53:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端基建规范参考\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-21T11:18:35.000Z\\",\\"dateModified\\":\\"2023-09-30T13:53:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员王天\\",\\"url\\":\\"http://www.itwangtian.com\\"}]}"]]},"headers":[{"level":2,"title":"一. 项目目录规范","slug":"一-项目目录规范","link":"#一-项目目录规范","children":[]},{"level":2,"title":"二. 代码书写规范","slug":"二-代码书写规范","link":"#二-代码书写规范","children":[]},{"level":2,"title":"三. 状态管理器优化和统一","slug":"三-状态管理器优化和统一","link":"#三-状态管理器优化和统一","children":[{"level":3,"title":"3.1 优化状态管理","slug":"_3-1-优化状态管理","link":"#_3-1-优化状态管理","children":[]},{"level":3,"title":"3.2 store 目录结构","slug":"_3-2-store-目录结构","link":"#_3-2-store-目录结构","children":[]},{"level":3,"title":"3.3 定义状态管理器","slug":"_3-3-定义状态管理器","link":"#_3-3-定义状态管理器","children":[]},{"level":3,"title":"3.4 使用状态管理器","slug":"_3-4-使用状态管理器","link":"#_3-4-使用状态管理器","children":[]}]},{"level":2,"title":"四. 本地存储统一管理","slug":"四-本地存储统一管理","link":"#四-本地存储统一管理","children":[]},{"level":2,"title":"五. 封装请求统一和项目解耦","slug":"五-封装请求统一和项目解耦","link":"#五-封装请求统一和项目解耦","children":[]},{"level":2,"title":"六. api 接口管理统一","slug":"六-api-接口管理统一","link":"#六-api-接口管理统一","children":[]},{"level":2,"title":"七. 函数库-通用方法抽离复用","slug":"七-函数库-通用方法抽离复用","link":"#七-函数库-通用方法抽离复用","children":[]},{"level":2,"title":"八. 组件库-通用组件抽离复用","slug":"八-组件库-通用组件抽离复用","link":"#八-组件库-通用组件抽离复用","children":[]},{"level":2,"title":"九. css 超集和 css 模块化方案统一","slug":"九-css-超集和-css-模块化方案统一","link":"#九-css-超集和-css-模块化方案统一","children":[]},{"level":2,"title":"十. 引入 immer 来优化性能和简化写法","slug":"十-引入-immer-来优化性能和简化写法","link":"#十-引入-immer-来优化性能和简化写法","children":[]},{"level":2,"title":"十一. 搭建 npm 私服","slug":"十一-搭建-npm-私服","link":"#十一-搭建-npm-私服","children":[]},{"level":2,"title":"十二. 各类型项目通用模版封装","slug":"十二-各类型项目通用模版封装","link":"#十二-各类型项目通用模版封装","children":[]},{"level":2,"title":"十三. 搭建 cli 脚手架下载模版。","slug":"十三-搭建-cli-脚手架下载模版。","link":"#十三-搭建-cli-脚手架下载模版。","children":[]},{"level":2,"title":"十四. git 操作规范","slug":"十四-git-操作规范","link":"#十四-git-操作规范","children":[]},{"level":2,"title":"十五. 规范和使用文档输出文档站点","slug":"十五-规范和使用文档输出文档站点","link":"#十五-规范和使用文档输出文档站点","children":[]}],"git":{"createdTime":1696082032000,"updatedTime":1696082032000,"contributors":[{"name":"1970652600@qq.com~","email":"1970652600@qq.com","commits":1}]},"readingTime":{"minutes":15.38,"words":4614},"filePathRelative":"docs/fbi9dqgqq17h84ag.md","localizedDate":"2023年7月21日","excerpt":"<h2> 一. 项目目录规范</h2>\\n<p>文件目录组织现在常用的有两种方式，后面公司采用的第二种，更方便一些。两种方式没有最好的，只有更适合自己公司的，只要公司内部达成一致了，用哪一种都会很方便。<br>\\n<strong>1.1 按功能类型来划分</strong><br>\\n按文件的功能类型来分，<strong>比如 api</strong>，<strong>组件</strong>，<strong>页面</strong>，<strong>路由</strong>，<strong>hooks</strong>，<strong>store</strong>，不管是全局使用到的，还是单独页面局部使用到的，都按照功能类型放在<strong>src</strong>下面对应的目录里面统一管理。</p>","autoDesc":true}');export{e as data};
