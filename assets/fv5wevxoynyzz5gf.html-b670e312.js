const e=JSON.parse('{"key":"v-9ef5b658","path":"/docs/fv5wevxoynyzz5gf.html","title":"接口","lang":"zh-CN","frontmatter":{"title":"接口","urlname":"fv5wevxoynyzz5gf","date":"2023-07-21 10:22:57","updated":"2023-08-16 11:28:21","description":"1、介绍： TypeScript 中的接口（Interface）用于定义对象的结构和类型。接口类似于制定一份合同或规范，描述了对象应该具有的属性、方法等特征，但并不提供具体的实现。 2、接口初探： 接口定义了对象应该具备的属性和方法。例如，我们可以定义一个Person接口来描述一个人的基本信息： interface Person { name: string; age: number; }","head":[["meta",{"property":"og:url","content":"http://www.itwangtian.com/docs/fv5wevxoynyzz5gf.html"}],["meta",{"property":"og:site_name","content":"王天的web进阶之路"}],["meta",{"property":"og:title","content":"接口"}],["meta",{"property":"og:description","content":"1、介绍： TypeScript 中的接口（Interface）用于定义对象的结构和类型。接口类似于制定一份合同或规范，描述了对象应该具有的属性、方法等特征，但并不提供具体的实现。 2、接口初探： 接口定义了对象应该具备的属性和方法。例如，我们可以定义一个Person接口来描述一个人的基本信息： interface Person { name: string; age: number; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T13:53:52.000Z"}],["meta",{"property":"article:author","content":"程序员王天"}],["meta",{"property":"article:published_time","content":"2023-07-21T10:22:57.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-30T13:53:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"接口\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-21T10:22:57.000Z\\",\\"dateModified\\":\\"2023-09-30T13:53:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员王天\\",\\"url\\":\\"http://www.itwangtian.com\\"}]}"]]},"headers":[{"level":3,"title":"1、介绍：","slug":"_1、介绍","link":"#_1、介绍","children":[]},{"level":3,"title":"2、接口初探：","slug":"_2、接口初探","link":"#_2、接口初探","children":[]},{"level":3,"title":"3、可选属性：","slug":"_3、可选属性","link":"#_3、可选属性","children":[]},{"level":3,"title":"4、只读属性：","slug":"_4、只读属性","link":"#_4、只读属性","children":[]},{"level":3,"title":"5、额外的检查属性：","slug":"_5、额外的检查属性","link":"#_5、额外的检查属性","children":[]},{"level":3,"title":"6、函数类型：","slug":"_6、函数类型","link":"#_6、函数类型","children":[]},{"level":3,"title":"7、可索引的类型：","slug":"_7、可索引的类型","link":"#_7、可索引的类型","children":[]},{"level":3,"title":"8、类类型：","slug":"_8、类类型","link":"#_8、类类型","children":[]},{"level":3,"title":"9、继承接口：","slug":"_9、继承接口","link":"#_9、继承接口","children":[]},{"level":3,"title":"10、混合类型：","slug":"_10、混合类型","link":"#_10、混合类型","children":[]},{"level":3,"title":"11、接口继承类：","slug":"_11、接口继承类","link":"#_11、接口继承类","children":[]}],"git":{"createdTime":1696082032000,"updatedTime":1696082032000,"contributors":[{"name":"1970652600@qq.com~","email":"1970652600@qq.com","commits":1}]},"readingTime":{"minutes":3.55,"words":1064},"filePathRelative":"docs/fv5wevxoynyzz5gf.md","localizedDate":"2023年7月21日","excerpt":"<h3> 1、介绍：</h3>\\n<p>TypeScript 中的接口（Interface）用于定义对象的结构和类型。接口类似于制定一份合同或规范，描述了对象应该具有的属性、方法等特征，但并不提供具体的实现。</p>\\n<h3> 2、接口初探：</h3>\\n<p>接口定义了对象应该具备的属性和方法。例如，我们可以定义一个<code>Person</code>接口来描述一个人的基本信息：</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Person</span> <span class=\\"token punctuation\\">{</span>\\n  name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">;</span>\\n  age<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
